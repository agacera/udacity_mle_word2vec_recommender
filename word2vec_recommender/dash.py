#AUTOGENERATED! DO NOT EDIT! File to edit: dev/04_dash.ipynb (unless otherwise specified).

__all__ = ['movies_df', 'links_df', 'update_output_div', 'external_stylesheets', 'app', 'start_dash']

#Cell
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

from functools import lru_cache

import pandas as pd
import requests

from .core import *
from .recommender import KnnRecommender

#Cell
movies_df = pd.read_csv("./data/ml-latest-small/movies.csv")
links_df = pd.read_csv("./data/ml-latest-small/links.csv")

#Cell
external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']

app = dash.Dash(__name__,
    external_stylesheets=external_stylesheets)

app.layout = html.Div(children=[
    html.H1(children='MovieLens Recommender based on Word2Vec'),

    html.Div(children='''
        Dash: A web application framework for Python.
    '''),

    dcc.Dropdown(
        id="movie-id",
        options=movies_df[["title", "movieId"]].apply(lambda r:  {"value": r["movieId"], "label": r["title"]} ,axis=1).tolist(),
    ),

    html.Div(id="selected-movie-id", children=""),

    dcc.Graph(
        id='example-graph',
        figure={
            'data': [
                {'x': [1, 2, 3], 'y': [4, 1, 2], 'type': 'bar', 'name': 'SF'},
                {'x': [1, 2, 3], 'y': [2, 4, 5], 'type': 'bar', 'name': u'Montr√©al'},
            ],
            'layout': {
                'title': 'Dash Data Visualization'
            }
        }
    )
])


@app.callback(
    Output(component_id='selected-movie-id', component_property='children'),
    [Input(component_id='movie-id', component_property='value')]
)
def update_output_div(input_value):
    return f"Selected movie = {input_value}"

#Cell
def start_dash(debug: bool = True):
    app.run_server(debug=debug, port=9998)